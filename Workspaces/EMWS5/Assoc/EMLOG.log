*------------------------------------------------------------*
사용자:                Administrator
날짜:                2018년 11월 17일
시간:                17시19분02초
사이트:                10503192
플랫폼:            X64_10HOME
관리 릴리스: 9.04.01M4P110916
EM 버전:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 17일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17시18분56초" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 분석 로그";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 분석 로그
날짜:                2018년 11월 17일
시간:                17시18분56초
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O18TWPN_ "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O18TWPN_ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 17일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17시18분56초" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "사용자:                Administrator";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "사이트:                10503192";
MPRINT(EM_DIAGRAM):   put "플랫폼:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "관리 릴리스: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM 버전:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 17일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17시18분56초" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "사용자:                Administrator";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 분석 출력";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 스코어 출력";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 리포트 출력";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22797      proc freq data=EMWS5.Assoc_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS5.Assoc_VariableSet noprint;
22798      table ROLE*LEVEL/out=WORK.AssocMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AssocMETA;
22799      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 EMWS5.ASSOC_VARIABLESET.에서 읽었습니다.
NOTE: 데이터셋 WORK.ASSOCMETA은(는) 2개의 관측값과 4개의 변수를 가지고 있습니다.
NOTE: 프로시저 FREQ 실행(총 프로세스 시간):
      실행 시간           0.09 초
      cpu 시간            0.09 초
 
 
22800      proc print data=WORK.AssocMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AssocMETA label noobs;
22801      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22802      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "역할" LEVEL = "측도 레벨" COUNT = "빈도 개수";
22803      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22804      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "변수 요약";
MPRINT(EM_DIAGRAM):   run;
22805      run;
 
NOTE: 2개의 관측값을 데이터셋 WORK.ASSOCMETA.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: PRINT, 페이지: 1)
NOTE: 프로시저 PRINT 실행(총 프로세스 시간):
      실행 시간           0.09 초
      cpu 시간            0.07 초
 
 
22806      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Assoc: 분석용 메타데이터 분석;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M06YLG7Y;
MPRINT(EM_DIAGRAM):   set WORK.M06YLG7Y;
MPRINT(EM_DIAGRAM):   where USE = 'Y';
MPRINT(EM_DIAGRAM):   run;
22814      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22815      * Assoc: 분석용 데이터 정렬;
MPRINT(EM_DIAGRAM):   * Assoc: 분석용 데이터 정렬;
22816      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22817      proc sort data=EMWS5.TextFilter2_TRANSACTION(keep= _item_ _DOCUMENT_) out=WORK.SORTEDTRAIN;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS5.TextFilter2_TRANSACTION(keep= _item_ _DOCUMENT_) out=WORK.SORTEDTRAIN;
22818      by _DOCUMENT_;
MPRINT(EM_DIAGRAM):   by _DOCUMENT_;
22819      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 5620개의 관측값을 데이터셋 EMWS5.TEXTFILTER2_TRANSACTION.에서 읽었습니다.
NOTE: 데이터셋 WORK.SORTEDTRAIN은(는) 5620개의 관측값과 2개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.16 초
      cpu 시간            0.15 초
 
 
22820      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22821      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
22822      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22823      %macro DMDBClass;
22824          _item_(DESC)
22825      %mend DMDBClass;
22826      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22827      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
22828      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22829      %macro DMDBVar;
22830
22831      %mend DMDBVar;
22832      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22833      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
22834      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22835      proc dmdb batch data=WORK.SORTEDTRAIN
22836      dmdbcat=WORK.EM_DMDB
22837      maxlevel = 100001
22838      normlen= 256
22839      out=WORK.EM_DMDB
22840      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.SORTEDTRAIN dmdbcat=WORK.EM_DMDB maxlevel = 100001 normlen= 256 out=WORK.EM_DMDB ;
22841      id
22842      _DOCUMENT_
22843      ;
MPRINT(EM_DIAGRAM):   id _DOCUMENT_ ;
MPRINT(EM_DIAGRAM):   class
22844      class %DMDBClass;
MPRINT(DMDBCLASS):   _item_(DESC)
MPRINT(EM_DIAGRAM):  ;
22845      target
22846      _item_
22847      ;
MPRINT(EM_DIAGRAM):   target _item_ ;
22848      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 5620   Memory used = 511K.
NOTE: 5620개의 관측값을 데이터셋 WORK.SORTEDTRAIN.에서 읽었습니다.
NOTE: 데이터셋 WORK.EM_DMDB은(는) 5620개의 관측값과 2개의 변수를 가지고 있습니다.
NOTE: 프로시저 DMDB 실행(총 프로세스 시간):
      실행 시간           0.05 초
      cpu 시간            0.04 초
 
 
MPRINT(EM_DIAGRAM):   quit;
22849      quit;
 
number_of_elements=0
number_of_elements=1
22850      options nocleanup;
MPRINT(EM_DIAGRAM):    options nocleanup;
22851      proc assoc dmdb dmdbcat=WORK.EM_DMDB out=EMWS5.Assoc_ASSOC data=WORK.EM_DMDB
22852      pctsup = 5
22853      items=4
22854      ;
MPRINT(EM_DIAGRAM):   proc assoc dmdb dmdbcat=WORK.EM_DMDB out=EMWS5.Assoc_ASSOC data=WORK.EM_DMDB pctsup = 5 items=4 ;
22855      customer
22856      _DOCUMENT_
22857      ;
MPRINT(EM_DIAGRAM):   customer _DOCUMENT_ ;
22858      target
22859      _ITEM_
22860      ;
MPRINT(EM_DIAGRAM):   target _ITEM_ ;
22861      run;
MPRINT(EM_DIAGRAM):   run;
 
 
----- Potential 1 item sets = 1721 -----
Counting items, records read:     5620
Number of customers:               487
Support level for item sets:        10
Maximum count for a set:           200
Sets meeting support level:         91
Megs of memory used:              0.51
 
----- Potential 2 item sets = 4095 -----
Counting items, records read:     5620
Maximum count for a set:            93
Sets meeting support level:        224
Megs of memory used:              1.02
 
----- Potential 3 item sets = 556 -----
Counting items, records read:     5620
Maximum count for a set:            45
Sets meeting support level:        166
Megs of memory used:              1.02
 
----- Potential 4 item sets = 92 -----
Counting items, records read:     5620
Maximum count for a set:            18
Sets meeting support level:         40
Megs of memory used:              1.02
NOTE: 데이터셋 EMWS5.ASSOC_ASSOC은(는) 522개의 관측값과 6개의 변수를 가지고 있습니다.
NOTE: 프로시저 ASSOC 실행(총 프로세스 시간):
      실행 시간           0.05 초
      cpu 시간            0.04 초
 
 
MPRINT(EM_DIAGRAM):   quit;
22862      quit;
22863
22864
 
22865      proc rulegen in = EMWS5.Assoc_ASSOC out=EMWS5.Assoc_RULE minconf = 10
22866      ;
MPRINT(EM_DIAGRAM):    proc rulegen in = EMWS5.Assoc_ASSOC out=EMWS5.Assoc_RULE minconf = 10 ;
22867      run;
MPRINT(EM_DIAGRAM):   run;
 
write set 1
write set 2
write set 3
write set 4
NOTE: 522개의 관측값을 데이터셋 EMWS5.ASSOC_ASSOC.에서 읽었습니다.
NOTE: 데이터셋 EMWS5.ASSOC_RULE은(는) 1720개의 관측값과 14개의 변수를 가지고 있습니다.
NOTE: 프로시저 RULEGEN 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.04 초
 
 
MPRINT(EM_DIAGRAM):   quit;
22868      quit;
22869
 
22870      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22871      * Assoc: 규칙 선택;
MPRINT(EM_DIAGRAM):   * Assoc: 규칙 선택;
22872      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22873      proc sort data=EMWS5.Assoc_RULE;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS5.Assoc_RULE;
22874      by descending LIFT;
MPRINT(EM_DIAGRAM):   by descending LIFT;
22875      where SET_SIZE>1;
MPRINT(EM_DIAGRAM):   where SET_SIZE>1;
22876      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 1629개의 관측값을 데이터셋 EMWS5.ASSOC_RULE.에서 읽었습니다.
      WHERE SET_SIZE>1;
NOTE: 데이터셋 EMWS5.ASSOC_RULE은(는) 1629개의 관측값과 14개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.03 초
 
 
22877      data WORK.ASSOCSUBSET;
MPRINT(EM_DIAGRAM):   data WORK.ASSOCSUBSET;
22878      set EMWS5.Assoc_RULE(obs=200);
MPRINT(EM_DIAGRAM):   set EMWS5.Assoc_RULE(obs=200);
22879      index=_N_;
MPRINT(EM_DIAGRAM):   index=_N_;
22880      label index = "%sysfunc(sasmsg(sashelp.dmine, rpt_ruleIndex_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label index = "규칙 인덱스";
22881      label _LHAND = "%sysfunc(sasmsg(sashelp.dmine, rpt_leftHandSide_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LHAND = "규칙 왼쪽";
22882      label _RHAND = "%sysfunc(sasmsg(sashelp.dmine, rpt_rightHandSide_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _RHAND = "규칙 오른쪽";
22883      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 200개의 관측값을 데이터셋 EMWS5.ASSOC_RULE.에서 읽었습니다.
NOTE: 데이터셋 WORK.ASSOCSUBSET은(는) 200개의 관측값과 15개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.05 초
      cpu 시간            0.04 초
 
 
22884      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22885      * Assoc: 링크 및 노드 데이터셋 생성;
MPRINT(EM_DIAGRAM):   * Assoc: 링크 및 노드 데이터셋 생성;
22886      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22887      data EMWS5.Assoc_LINKS(keep=LINKID _LHAND _RHAND LIFT EXP_CONF CONF SUPPORT COUNT rename=(_RHAND=TO _LHAND=FROM)) WORK.LEFT(keep=_LHAND rename=(_LHAND=ITEM)) WORK.RIGHT(keep=_RHAND rename=(_RHAND=ITEM));
MPRINT(EM_DIAGRAM):   data EMWS5.Assoc_LINKS(keep=LINKID _LHAND _RHAND LIFT EXP_CONF CONF SUPPORT COUNT rename=(_RHAND=TO _LHAND=FROM)) WORK.LEFT(keep=_LHAND rename=(_LHAND=ITEM)) WORK.RIGHT(keep=_RHAND rename=(_RHAND=ITEM));
22888      label _RHAND= "%sysfunc(sasmsg(sashelp.dmine, rpt_to_vlabel ,            NOQUOTE))" _LHAND= "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel,           NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _RHAND= "종료" _LHAND= "From";
22889      set WORK.ASSOCSUBSET;
MPRINT(EM_DIAGRAM):   set WORK.ASSOCSUBSET;
22890      label LINKID = "%sysfunc(sasmsg(sashelp.dmine, rpt_varclus_label_linkid , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LINKID = "링크 ID";
22891      LINKID = _N_;
MPRINT(EM_DIAGRAM):   LINKID = _N_;
22892      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 200개의 관측값을 데이터셋 WORK.ASSOCSUBSET.에서 읽었습니다.
NOTE: 데이터셋 EMWS5.ASSOC_LINKS은(는) 200개의 관측값과 8개의 변수를 가지고 있습니다.
NOTE: 데이터셋 WORK.LEFT은(는) 200개의 관측값과 1개의 변수를 가지고 있습니다.
NOTE: 데이터셋 WORK.RIGHT은(는) 200개의 관측값과 1개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.08 초
      cpu 시간            0.07 초
 
 
22893      data WORK.ASSOCTEMP;
MPRINT(EM_DIAGRAM):   data WORK.ASSOCTEMP;
22894      set WORK.LEFT WORK.RIGHT;
MPRINT(EM_DIAGRAM):   set WORK.LEFT WORK.RIGHT;
22895      where ITEM ne '';
MPRINT(EM_DIAGRAM):   where ITEM ne '';
22896      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 200개의 관측값을 데이터셋 WORK.LEFT.에서 읽었습니다.
      WHERE ITEM not = ' ';
NOTE: 200개의 관측값을 데이터셋 WORK.RIGHT.에서 읽었습니다.
      WHERE ITEM not = ' ';
NOTE: 데이터셋 WORK.ASSOCTEMP은(는) 400개의 관측값과 1개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.03 초
 
 
22897      proc sort data=WORK.ASSOCTEMP nodup;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.ASSOCTEMP nodup;
22898      by ITEM;
MPRINT(EM_DIAGRAM):   by ITEM;
22899      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 400개의 관측값을 데이터셋 WORK.ASSOCTEMP.에서 읽었습니다.
NOTE: 311개의 중복 관측값이 삭제되었습니다.
NOTE: 데이터셋 WORK.ASSOCTEMP은(는) 89개의 관측값과 1개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.03 초
 
 
22900      data WORK.ITEMS (keep=ITEM COUNT);
MPRINT(EM_DIAGRAM):   data WORK.ITEMS (keep=ITEM COUNT);
22901      set EMWS5.Assoc_ASSOC;
MPRINT(EM_DIAGRAM):   set EMWS5.Assoc_ASSOC;
22902      where set_size=1;
MPRINT(EM_DIAGRAM):   where set_size=1;
22903      ITEM = ITEM1;
MPRINT(EM_DIAGRAM):   ITEM = ITEM1;
22904      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 91개의 관측값을 데이터셋 EMWS5.ASSOC_ASSOC.에서 읽었습니다.
      WHERE set_size=1;
NOTE: 데이터셋 WORK.ITEMS은(는) 91개의 관측값과 2개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.03 초
 
 
22905      proc sort data=WORK.ITEMS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.ITEMS;
22906      by ITEM;
MPRINT(EM_DIAGRAM):   by ITEM;
22907      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 91개의 관측값을 데이터셋 WORK.ITEMS.에서 읽었습니다.
NOTE: 데이터셋 WORK.ITEMS은(는) 91개의 관측값과 2개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.01 초
 
 
22908      data EMWS5.Assoc_NODES;
MPRINT(EM_DIAGRAM):   data EMWS5.Assoc_NODES;
22909      merge WORK.ASSOCTEMP(in=a) WORK.ITEMS;
MPRINT(EM_DIAGRAM):   merge WORK.ASSOCTEMP(in=a) WORK.ITEMS;
22910      by ITEM;
MPRINT(EM_DIAGRAM):   by ITEM;
22911      if COUNT=. then COUNT=-1;
MPRINT(EM_DIAGRAM):   if COUNT=. then COUNT=-1;
22912      if a then output;
MPRINT(EM_DIAGRAM):   if a then output;
22913      label ITEM = "%sysfunc(sasmsg(sashelp.dmine, rpt_item_vlabel ,     NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ITEM = "항목" COUNT = "빈도 개수";
22914      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 89개의 관측값을 데이터셋 WORK.ASSOCTEMP.에서 읽었습니다.
NOTE: 91개의 관측값을 데이터셋 WORK.ITEMS.에서 읽었습니다.
NOTE: 데이터셋 EMWS5.ASSOC_NODES은(는) 89개의 관측값과 2개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.04 초
 
 
22915      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22916      * Assoc: 규칙 데이터셋 생성;
MPRINT(EM_DIAGRAM):   * Assoc: 규칙 데이터셋 생성;
22917      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22918      proc sort data=WORK.ASSOCSUBSET out=EMWS5.Assoc_RULES;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.ASSOCSUBSET out=EMWS5.Assoc_RULES;
22919      by descending LIFT _RHAND;
MPRINT(EM_DIAGRAM):   by descending LIFT _RHAND;
22920      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 200개의 관측값을 데이터셋 WORK.ASSOCSUBSET.에서 읽었습니다.
NOTE: 데이터셋 EMWS5.ASSOC_RULES은(는) 200개의 관측값과 15개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.03 초
 
 
22921      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22922      * Assoc: 전치할 규칙 작성;
MPRINT(EM_DIAGRAM):   * Assoc: 전치할 규칙 작성;
22923      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22924      data EMWS5.Assoc_RULES;
MPRINT(EM_DIAGRAM):   data EMWS5.Assoc_RULES;
22925      set EMWS5.Assoc_RULES;
MPRINT(EM_DIAGRAM):   set EMWS5.Assoc_RULES;
22926      label Transpose= "%sysfunc(sasmsg(sashelp.dmine, rpt_transposeRule_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Transpose= "규칙 전치";
22927      if _N_ <= 200 then Transpose=1;
MPRINT(EM_DIAGRAM):   if _N_ <= 200 then Transpose=1;
22928      else Transpose=0;
MPRINT(EM_DIAGRAM):   else Transpose=0;
22929      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 200개의 관측값을 데이터셋 EMWS5.ASSOC_RULES.에서 읽었습니다.
NOTE: 데이터셋 EMWS5.ASSOC_RULES은(는) 200개의 관측값과 16개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.04 초
 
 
22930      %let numtransrules = 0;
22931      data WORK.RULEID;
MPRINT(EM_DIAGRAM):    data WORK.RULEID;
22932      set EMWS5.Assoc_RULES(where=(transpose=1)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS5.Assoc_RULES(where=(transpose=1)) end=eof;
22933      ruleid = _N_;
MPRINT(EM_DIAGRAM):   ruleid = _N_;
22934      drop transpose;
MPRINT(EM_DIAGRAM):   drop transpose;
22935      if eof then call symput('numtransrules', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('numtransrules', strip(put(_N_, best.)));
22936      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 200개의 관측값을 데이터셋 EMWS5.ASSOC_RULES.에서 읽었습니다.
      WHERE transpose=1;
NOTE: 데이터셋 WORK.RULEID은(는) 200개의 관측값과 16개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.03 초
 
 
NOTE: 이 SAS 세션은 WORK 내의 임의의 레지스트리를 사용합니다. 이 세션을 종료할 때 모든 변경 사항은 저장되지 않습니다.
22937      proc print data = EMWS5.Assoc_RULES(drop=Transpose obs=25) noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS5.Assoc_RULES(drop=Transpose obs=25) noobs label;
22938      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22939      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_association_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "연결 리포트";
MPRINT(EM_DIAGRAM):   run;
22940      run;
 
NOTE: 25개의 관측값을 데이터셋 EMWS5.ASSOC_RULES.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: PRINT, 페이지: 2)
NOTE: 프로시저 PRINT 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.03 초
 
 
22941      proc means data=EMWS5.Assoc_RULES min max mean;
MPRINT(EM_DIAGRAM):   proc means data=EMWS5.Assoc_RULES min max mean;
22942      var exp_conf conf support lift;
MPRINT(EM_DIAGRAM):   var exp_conf conf support lift;
22943      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22944      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_ruleStatistics_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "규칙 통계량";
MPRINT(EM_DIAGRAM):   run;
22945      run;
 
NOTE: 200개의 관측값을 데이터셋 EMWS5.ASSOC_RULES.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: MEANS, 페이지: 3)
NOTE: 프로시저 MEANS 실행(총 프로세스 시간):
      실행 시간           0.06 초
      cpu 시간            0.06 초
 
 
22946      proc freq data=EMWS5.Assoc_RULES;
MPRINT(EM_DIAGRAM):   proc freq data=EMWS5.Assoc_RULES;
22947      table set_size;
MPRINT(EM_DIAGRAM):   table set_size;
22948      title9;
MPRINT(EM_DIAGRAM):   title9;
22949      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_sequence_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "순차분석 리포트";
MPRINT(EM_DIAGRAM):   run;
22950      run;
 
NOTE: 200개의 관측값을 데이터셋 EMWS5.ASSOC_RULES.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: FREQ, 페이지: 4)
NOTE: 프로시저 FREQ 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.03 초
 
 
22951      title10;
MPRINT(EM_DIAGRAM):   title10;
22952      data EMWS5.Assoc_RULEMAP(keep=map rule);
MPRINT(EM_DIAGRAM):    data EMWS5.Assoc_RULEMAP(keep=map rule);
22953      length map $8;
MPRINT(EM_DIAGRAM):   length map $8;
22954      label map = "%sysfunc(sasmsg(sashelp.dmine, rpt_map_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label map = "Map";
22955      set EMWS5.Assoc_RULES;
MPRINT(EM_DIAGRAM):   set EMWS5.Assoc_RULES;
22956      map = "RULE"!!left(trim(put(_n_, 12.0)));
MPRINT(EM_DIAGRAM):   map = "RULE"!!left(trim(put(_n_, 12.0)));
22957      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 200개의 관측값을 데이터셋 EMWS5.ASSOC_RULES.에서 읽었습니다.
NOTE: 데이터셋 EMWS5.ASSOC_RULEMAP은(는) 200개의 관측값과 2개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.03 초
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 17일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17시19분00초" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 스코어 로그";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 스코어 로그
날짜:                2018년 11월 17일
시간:                17시19분00초
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O36CB5UT "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O36CB5UT new;
MPRINT(EM_DIAGRAM):   run;
23059      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23060      * Assoc: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Assoc: Scoring DATA data;
23061      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23062      data EMWS5.Assoc_TRANSACTION
23063      / view=EMWS5.Assoc_TRANSACTION
23064      ;
MPRINT(EM_DIAGRAM):   data EMWS5.Assoc_TRANSACTION / view=EMWS5.Assoc_TRANSACTION ;
23065      set EMWS5.TextFilter2_TRANSACTION
23066      ;
MPRINT(EM_DIAGRAM):   set EMWS5.TextFilter2_TRANSACTION ;
23067      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP 뷰가 파일 EMWS5.ASSOC_TRANSACTION에 저장되었습니다.
NOTE: 저장된 DATA STEP 뷰는 다른 운영 체제에서 실행할 수 없습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.04 초
 
 
MPRINT(EM_DIAGRAM):   quit;
23068      quit;
 
23069      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23070      * Assoc: Computing metadata for TRANSACTION data;
MPRINT(EM_DIAGRAM):   * Assoc: Computing metadata for TRANSACTION data;
23071      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS5.ASSOC_TRANSACTION.VIEW 실행(총 프로세스 시간):
      실행 시간           0.10 초
      cpu 시간            0.11 초
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRANSACTION data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS5.Assoc_TRANSACTION out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS5.Assoc_TRANSACTION');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS5.Assoc_TRANSACTION out=WORK.M16W16BW noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16W16BW;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M16W16BW(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16W16BW;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M16W16BW;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0NQBNQQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0NQBNQQ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0NQBNQQ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DZ_0WZ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0NQBNQQ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0NQBNQQ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0NQBNQQ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0NQBNQQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M0NQBNQQ;
MPRINT(EMADVISECOLUMNS):   label NAME = "변수 이름" TYPE = "유형" ROLE = "역할" LEVEL= "측도 레벨" ORDER= "순서" CREATOR= "생성자" FORMATTYPE= "출력형식 유형" FAMILY= "군" DISTRIBUTION= "분포" PRICE= "가격" LOWERLIMIT= "하한" UPPERLIMIT= "상한" REPORT=
"리 포트" COMMENT= "주석" INDEX= "인덱스" INDEXTYPE= "인덱스 유형" LABEL= "레이블" LENGTH= "길이";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS5.TextFilter2_TRANSACTION noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS5.TextFilter2_CMeta_TRANSACTION out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS5.Assoc_CMeta_TRANSACTION;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Assoc";
MPRINT(EM_DIAGRAM):   run;
23403      data EMWS5.Assoc_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS5.Assoc_EMINFO;
23404      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
23405      TARGET='';
MPRINT(EM_DIAGRAM):   TARGET='';
23406      KEY='ASSOCIATION';
MPRINT(EM_DIAGRAM):   KEY='ASSOCIATION';
23407      DATA="Assoc";
MPRINT(EM_DIAGRAM):   DATA="Assoc";
23408      output;
MPRINT(EM_DIAGRAM):   output;
23409      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 EMWS5.ASSOC_EMINFO은(는) 1개의 관측값과 3개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.03 초
 
 
23410      proc sort data = EMWS5.TextFilter2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS5.TextFilter2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
23411      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
23412      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 6개의 관측값을 데이터셋 EMWS5.TEXTFILTER2_EMINFO.에서 읽었습니다.
NOTE: 데이터셋 WORK.SORTEDEMINFO은(는) 6개의 관측값과 3개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.04 초
 
 
23413      proc sort data = EMWS5.Assoc_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS5.Assoc_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
23414      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
23415      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 1개의 관측값을 데이터셋 EMWS5.ASSOC_EMINFO.에서 읽었습니다.
NOTE: 데이터셋 WORK.TEMP_INFO은(는) 1개의 관측값과 3개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.03 초
 
 
23416      data EMWS5.Assoc_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS5.Assoc_EMINFO;
23417      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
23418      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
23419      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 6개의 관측값을 데이터셋 WORK.SORTEDEMINFO.에서 읽었습니다.
NOTE: 1개의 관측값을 데이터셋 WORK.TEMP_INFO.에서 읽었습니다.
NOTE: 데이터셋 EMWS5.ASSOC_EMINFO은(는) 7개의 관측값과 3개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.03 초
 
 
23420      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
23421      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
23422      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: WORK.TEMP_INFO(memtype=DATA)을(를) 삭제하는 중입니다.
NOTE: WORK.SORTEDEMINFO(memtype=DATA)을(를) 삭제하는 중입니다.
23423      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: 프로시저 DATASETS 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.06 초
 
 
NOTE: View EMWS5.ASSOC_TRANSACTION.VIEW 실행(총 프로세스 시간):
      실행 시간           0.10 초
      cpu 시간            0.10 초
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 17일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17시19분02초" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 리포트 로그";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 리포트 로그
날짜:                2018년 11월 17일
시간:                17시19분02초
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O15NIOVG "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS5\Assoc\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O15NIOVG new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;

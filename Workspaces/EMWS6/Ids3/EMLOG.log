*------------------------------------------------------------*
사용자:                Administrator
날짜:                2018년 11월 20일
시간:                10시17분27초
사이트:                10503192
플랫폼:            X64_10HOME
관리 릴리스: 9.04.01M4P110916
EM 버전:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10시17분24초" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 분석 로그";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 분석 로그
날짜:                2018년 11월 20일
시간:                10시17분24초
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O15JP64T "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O15JP64T new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10시17분24초" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "사용자:                Administrator";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "사이트:                10503192";
MPRINT(EM_DIAGRAM):   put "플랫폼:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "관리 릴리스: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM 버전:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10시17분24초" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "사용자:                Administrator";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 분석 출력";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 스코어 출력";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 리포트 출력";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22140      proc freq data=EMWS6.Ids3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS6.Ids3_VariableSet noprint;
22141      table ROLE*LEVEL/out=WORK.Ids3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ids3META;
22142      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 26개의 관측값을 데이터셋 EMWS6.IDS3_VARIABLESET.에서 읽었습니다.
NOTE: 데이터셋 WORK.IDS3META은(는) 6개의 관측값과 4개의 변수를 가지고 있습니다.
NOTE: 프로시저 FREQ 실행(총 프로세스 시간):
      실행 시간           0.05 초
      cpu 시간            0.04 초
 
 
22143      proc print data=WORK.Ids3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ids3META label noobs;
22144      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22145      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "역할" LEVEL = "측도 레벨" COUNT = "빈도 개수";
22146      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22147      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "변수 요약";
MPRINT(EM_DIAGRAM):   run;
22148      run;
 
NOTE: 6개의 관측값을 데이터셋 WORK.IDS3META.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: PRINT, 페이지: 1)
NOTE: 프로시저 PRINT 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.03 초
 
 
22149      title10;
MPRINT(EM_DIAGRAM):   title10;
22150      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22151      rc = libref("DM_LIB");
MPRINT(EM_DIAGRAM):   rc = libref("DM_LIB");
22152      call symput('_librc', strip(put(rc, best.)));
MPRINT(EM_DIAGRAM):   call symput('_librc', strip(put(rc, best.)));
22153      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.00 초
      cpu 시간            0.00 초
 
 
22154      %let _engineTable =;
22155      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22156      dsid = open("DM_LIB.BUYTEST");
MPRINT(EM_DIAGRAM):   dsid = open("DM_LIB.BUYTEST");
22157      if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
22158      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
22159      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
22160      end;
MPRINT(EM_DIAGRAM):   end;
22161      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.00 초
      cpu 시간            0.01 초
 
 
22162      %let _lasrFile=;
22163      %let _sasiolaFile=;
22164      data null_;
MPRINT(EM_DIAGRAM):    data null_;
22165      length lasrfile sasiolaFile $2000;
MPRINT(EM_DIAGRAM):   length lasrfile sasiolaFile $2000;
22166      LASRFile = pathname("EMWS6")!!"\"!!"HPDM\"!!"hpdmlasr";
MPRINT(EM_DIAGRAM):   LASRFile = pathname("EMWS6")!!"\"!!"HPDM\"!!"hpdmlasr";
22167      SASIOLAFile = pathname("EMWS6")!!"\"!!"HPDM\"!!'sasiola.sas';
MPRINT(EM_DIAGRAM):   SASIOLAFile = pathname("EMWS6")!!"\"!!"HPDM\"!!'sasiola.sas';
22168      call symput('_lasrFile', strip(lasrfile));
MPRINT(EM_DIAGRAM):   call symput('_lasrFile', strip(lasrfile));
22169      call symput('_sasiolaFile', strip(sasiolafile));
MPRINT(EM_DIAGRAM):   call symput('_sasiolaFile', strip(sasiolafile));
22170      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK.NULL_은(는) 1개의 관측값과 2개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22171      %let _UseGrid = 0;
22172      %hpdm_performance(data=DM_LIB.BUYTEST, isGrid=_UseGrid);
MPRINT(EM_DIAGRAM):
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
22173      %put &_UseGrid;
0
22174      %let em_idskey =;
22175      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22176      set EMWS6.Ids3_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS6.Ids3_VariableSet;
22177      where ROLE = 'KEY';
MPRINT(EM_DIAGRAM):   where ROLE = 'KEY';
22178      call symput('em_idskey', strip(tranwrd(name, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('em_idskey', strip(tranwrd(name, '"', '""')));
22179      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 0개의 관측값을 데이터셋 EMWS6.IDS3_VARIABLESET.에서 읽었습니다.
      WHERE ROLE='KEY';
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.00 초
      cpu 시간            0.01 초
 
 
22180      %let emexceptionstring=;
22181      %EmAdviseColumns(DM_LIB.BUYTEST, adviseMode=BASIC, applyIntervalLevelLowerLimit=N, applyMaxPercentMissing=N, applyMaxClassLevels=N, identifyEmptyColumns=N, maxLevelDetection=0, outdata=EMWS6.Ids3_EMCMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
 
22182      %let SYSCC = 0;
22183      %let _dsidTable = 0;
22184      %let _engineTable =;
22185      data _null_;
MPRINT(EMADVISECOLUMNS):    data _null_;
22186      dsid = open('DM_LIB.BUYTEST');
MPRINT(EMADVISECOLUMNS):   dsid = open('DM_LIB.BUYTEST');
22187      call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
22188      if dsid then do;
MPRINT(EMADVISECOLUMNS):   if dsid then do;
22189      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
22190      dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
22191      end;
MPRINT(EMADVISECOLUMNS):   end;
22192      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.00 초
      cpu 시간            0.01 초
 
 
22193      options fmterr;
MPRINT(EMADVISECOLUMNS):    options fmterr;
22194      data _metaTestView;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
22195      set DM_LIB.BUYTEST;
MPRINT(EMADVISECOLUMNS):   set DM_LIB.BUYTEST;
22196      if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
22197      output;
MPRINT(EMADVISECOLUMNS):   output;
22198      stop;
MPRINT(EMADVISECOLUMNS):   stop;
22199      end;
MPRINT(EMADVISECOLUMNS):   end;
22200      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 1개의 관측값을 데이터셋 DM_LIB.BUYTEST.에서 읽었습니다.
NOTE: 데이터셋 WORK._METATESTVIEW은(는) 1개의 관측값과 26개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22201      proc contents data=DM_LIB.BUYTEST
22202      out=WORK.M2XC0NZ3 noprint;
MPRINT(EMADVISECOLUMNS):    proc contents data=DM_LIB.BUYTEST out=WORK.M2XC0NZ3 noprint;
22203      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 데이터셋 WORK.M2XC0NZ3은(는) 26개의 관측값과 41개의 변수를 가지고 있습니다.
NOTE: 프로시저 CONTENTS 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22204      data WORK.M2XC0NZ3;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XC0NZ3;
22205      length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
22206      label NAME =;
MPRINT(EMADVISECOLUMNS):   label NAME =;
22207      set WORK.M2XC0NZ3(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   set WORK.M2XC0NZ3(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
22208      if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
22209      else type = 'C';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
22210      if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
22211      if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
22212      if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
22213      else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
22214      end;
MPRINT(EMADVISECOLUMNS):   end;
22215      else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
22216      end;
MPRINT(EMADVISECOLUMNS):   end;
22217      else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
22218      if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
22219      if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
22220      if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
22221      else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
22222      end;
MPRINT(EMADVISECOLUMNS):   end;
22223      else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
22224      end;
MPRINT(EMADVISECOLUMNS):   end;
22225      else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
22226      if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
22227      else index = "Y";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
22228      indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
22229      drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
22230      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 26개의 관측값을 데이터셋 WORK.M2XC0NZ3.에서 읽었습니다.
NOTE: 데이터셋 WORK.M2XC0NZ3은(는) 26개의 관측값과 8개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22231      data WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LV_Y2K;
22232      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
22233      set WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LV_Y2K;
22234      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
22235      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 26개의 관측값을 데이터셋 WORK.M1LV_Y2K.에서 읽었습니다.
NOTE: 데이터셋 WORK.M1LV_Y2K은(는) 26개의 관측값과 21개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22236      data WORK.M2XC0NZ3;
MPRINT(EMADVISECOLUMNS):    data WORK.M2XC0NZ3;
22237      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
22238      set WORK.M2XC0NZ3;
MPRINT(EMADVISECOLUMNS):   set WORK.M2XC0NZ3;
22239      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
22240      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 26개의 관측값을 데이터셋 WORK.M2XC0NZ3.에서 읽었습니다.
NOTE: 데이터셋 WORK.M2XC0NZ3은(는) 26개의 관측값과 9개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2XC0NZ3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort data=WORK.M1LV_Y2K NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   data WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):   merge WORK.M1LV_Y2K(in=_a) WORK.M2XC0NZ3(in=_b);
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   if _a and ^_b then delete;
MPRINT(EMADVISECOLUMNS):   run;
22252      data WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LV_Y2K;
22253      drop UNAME;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
22254      set WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LV_Y2K;
22255      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: 26개의 관측값을 데이터셋 WORK.M1LV_Y2K.에서 읽었습니다.
NOTE: 데이터셋 WORK.M1LV_Y2K은(는) 26개의 관측값과 20개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
MPRINT(EMADVISECOLUMNS):    data WORK.M0VT71I8(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LV_Y2K;
MPRINT(EMADVISECOLUMNS):   label NAME = "변수 이름" TYPE = "유형" ROLE = "역할" LEVEL= "측도 레벨" ORDER= "순서" CREATOR= "생성자" FORMATTYPE= "출력형식 유형" FAMILY= "군" DISTRIBUTION= "분포" PRICE= "가격" LOWERLIMIT= "하한" UPPERLIMIT= "상한" REPORT=
"리 포트" COMMENT= "주석" INDEX= "인덱스" INDEXTYPE= "인덱스 유형" LABEL= "레이블" LENGTH= "길이";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
NOTE: 프로시저 DISPLAY 실행(총 프로세스 시간):
      실행 시간           0.52 초
      cpu 시간            0.53 초
 
 
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
 
22506      %EmAdviseTable(DM_LIB.BUYTEST, outdata=EMWS6.Ids3_EMTMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):
MPRINT(EMADVISETABLE):   proc display c=sashelp.emmeta.advisetable.scl;
MPRINT(EMADVISETABLE):   run;
 
22507      %let SYSCC = 0;
22508      data EMWS6.Ids3_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):    data EMWS6.Ids3_EMTMETADEFAULT;
22509      set EMWS6.Ids3_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):   set EMWS6.Ids3_EMTMETADEFAULT;
22510      length LIBNAME $8;
MPRINT(EMADVISETABLE):   length LIBNAME $8;
22511      LIBNAME = "DM_LIB";
MPRINT(EMADVISETABLE):   LIBNAME = "DM_LIB";
22512      run;
MPRINT(EMADVISETABLE):   run;
 
NOTE: 1개의 관측값을 데이터셋 EMWS6.IDS3_EMTMETADEFAULT.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.IDS3_EMTMETADEFAULT은(는) 1개의 관측값과 15개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
MPRINT(EMADVISETABLE):    data _null_;
MPRINT(EMADVISETABLE):   dsid = open("DM_LIB.BUYTEST");
MPRINT(EMADVISETABLE):   call symput("_DSID", put(dsid,BEST.));
MPRINT(EMADVISETABLE):   if dsid > 0 then dsid = close(dsid);
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):    ods output enginehost=em_tablehost;
MPRINT(EMADVISETABLE):   ods listing close;
MPRINT(EMADVISETABLE):   proc contents data=DM_LIB.BUYTEST;
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):   ods listing;
MPRINT(EMADVISETABLE):    data WORK.M28WIPTQ;
MPRINT(EMADVISETABLE):   length MEMNAME $ 32 MEMTYPE $ 8 MEMLABEL $ 256 TYPEMEM $ 8 ENGINE $ 8 CRDATE 8 MODATE 8 NOBS 8 NCOLS 8 NBYTES 8 ROLE $ 20 USEEXTERNALDATA $1 SAMPLINGRATE 8 SEGMENT $ 20;
MPRINT(EMADVISETABLE):   set WORK.M28WIPTQ(obs=1);
MPRINT(EMADVISETABLE):   nobs = 10000;
MPRINT(EMADVISETABLE):   ncols = 26;
MPRINT(EMADVISETABLE):   nbytes = 1901568;
MPRINT(EMADVISETABLE):   memname = "BUYTEST";
MPRINT(EMADVISETABLE):   memtype = "DATA    ";
MPRINT(EMADVISETABLE):   memlabel = "";
MPRINT(EMADVISETABLE):   typemem = "DATA    ";
MPRINT(EMADVISETABLE):   engine = "BASE    ";
MPRINT(EMADVISETABLE):   crdate = 1772321183.778;
MPRINT(EMADVISETABLE):   modate = 1772321183.778;
MPRINT(EMADVISETABLE):   format crdate datetime16.;
MPRINT(EMADVISETABLE):   format modate datetime16.;
MPRINT(EMADVISETABLE):   if role = ' ' then role = 'TRAIN';
MPRINT(EMADVISETABLE):   output;
MPRINT(EMADVISETABLE):   run;
NOTE: 프로시저 DISPLAY 실행(총 프로세스 시간):
      실행 시간           0.19 초
      cpu 시간            0.18 초
 
 
MPRINT(EMADVISETABLE):
MPRINT(EM_DIAGRAM):  ;
 
22541      data EMWS6.Ids3_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    data EMWS6.Ids3_EMCMETADEFAULT;
22542      set EMWS6.Ids3_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):   set EMWS6.Ids3_EMCMETADEFAULT;
22543      label DROP = "%sysfunc(sasmsg(sashelp.dmine, meta_drop_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DROP = "제거";
22544      if DROP='' then DROP='N';
MPRINT(EM_DIAGRAM):   if DROP='' then DROP='N';
22545      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
22546      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
22547      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 26개의 관측값을 데이터셋 EMWS6.IDS3_EMCMETADEFAULT.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.IDS3_EMCMETADEFAULT은(는) 26개의 관측값과 21개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.01 초
 
 
22548      proc sort data=EMWS6.Ids3_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS6.Ids3_EMCMETADEFAULT;
22549      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22550      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 26개의 관측값을 데이터셋 EMWS6.IDS3_EMCMETADEFAULT.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.IDS3_EMCMETADEFAULT은(는) 26개의 관측값과 21개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22551      proc sort data=EMWS6.Ids3_VariableSet;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS6.Ids3_VariableSet;
22552      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22553      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 26개의 관측값을 데이터셋 EMWS6.IDS3_VARIABLESET.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.IDS3_VARIABLESET은(는) 26개의 관측값과 21개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22554      data EMWS6.Ids3_VariableSet;
MPRINT(EM_DIAGRAM):   data EMWS6.Ids3_VariableSet;
22555      merge EMWS6.Ids3_EMCMETADEFAULT(in=_a) EMWS6.Ids3_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS6.Ids3_EMCMETADEFAULT(in=_a) EMWS6.Ids3_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
22556      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22557      if ^_a and _b then delete;
MPRINT(EM_DIAGRAM):   if ^_a and _b then delete;
22558      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
22559      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
22560      if (type ne oldtype) and (_a and _b) then do;
MPRINT(EM_DIAGRAM):   if (type ne oldtype) and (_a and _b) then do;
22561      if type ='N' then level='INTERVAL';
MPRINT(EM_DIAGRAM):   if type ='N' then level='INTERVAL';
22562      end;
MPRINT(EM_DIAGRAM):   end;
22563      drop oldtype;
MPRINT(EM_DIAGRAM):   drop oldtype;
22564      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 26개의 관측값을 데이터셋 EMWS6.IDS3_EMCMETADEFAULT.에서 읽었습니다.
NOTE: 26개의 관측값을 데이터셋 EMWS6.IDS3_VARIABLESET.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.IDS3_VARIABLESET은(는) 26개의 관측값과 21개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.03 초
 
 
22565      data EMWS6.Ids3_CMeta_DATA;
MPRINT(EM_DIAGRAM):    data EMWS6.Ids3_CMeta_DATA;
22566      set WORK.M2GBB8LD;
MPRINT(EM_DIAGRAM):   set WORK.M2GBB8LD;
22567      drop DROP;
MPRINT(EM_DIAGRAM):   drop DROP;
22568      where DROP='N';
MPRINT(EM_DIAGRAM):   where DROP='N';
22569      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 26개의 관측값을 데이터셋 WORK.M2GBB8LD.에서 읽었습니다.
      WHERE DROP='N';
NOTE: 데이터셋 EMWS6.IDS3_CMETA_DATA은(는) 26개의 관측값과 20개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
*------------------------------------------------------------*
Ids3: "DM_LIB.BUYTEST" 데이터소스 사용
*------------------------------------------------------------*
22570      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22571      * Ids3: DATA 데이터 생성;
MPRINT(EM_DIAGRAM):   * Ids3: DATA 데이터 생성;
22572      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22573      data EMWS6.Ids3_DATA (label="")
22574      / view=EMWS6.Ids3_DATA
22575      ;
MPRINT(EM_DIAGRAM):   data EMWS6.Ids3_DATA (label="") / view=EMWS6.Ids3_DATA ;
22576      set DM_LIB.BUYTEST;
MPRINT(EM_DIAGRAM):   set DM_LIB.BUYTEST;
22577      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP 뷰가 파일 EMWS6.IDS3_DATA에 저장되었습니다.
NOTE: 저장된 DATA STEP 뷰는 다른 운영 체제에서 실행할 수 없습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.01 초
 
 
22578      data WORK.IDSOUTPUT;
MPRINT(EM_DIAGRAM):    data WORK.IDSOUTPUT;
22579      length ATTRIBUTE $20 LABEL $50 VALUE $50;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $50;
22580      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "속성";
22581      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "값";
22582      ATTRIBUTE = 'OUTPUT';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUT';
22583      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutput_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "출력 테이블";
22584      VALUE = "EMWS6.Ids3_DATA";
MPRINT(EM_DIAGRAM):   VALUE = "EMWS6.Ids3_DATA";
22585      output;
MPRINT(EM_DIAGRAM):   output;
22586      ATTRIBUTE = 'OUTPUTTYPE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUTTYPE';
22587      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutputtype_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "출력 유형";
22588      VALUE = "뷰";
MPRINT(EM_DIAGRAM):   VALUE = "뷰";
22589      output;
MPRINT(EM_DIAGRAM):   output;
22590      ATTRIBUTE = 'DROPVARS';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DROPVARS';
22591      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeldropvars_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "제거된 변수";
22592      VALUE = "0";
MPRINT(EM_DIAGRAM):   VALUE = "0";
22593      output;
MPRINT(EM_DIAGRAM):   output;
22594      ATTRIBUTE = 'ROLE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'ROLE';
22595      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelrole_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "데이터 마이닝 역할";
22596      VALUE = "Raw";
MPRINT(EM_DIAGRAM):   VALUE = "Raw";
22597      output;
MPRINT(EM_DIAGRAM):   output;
22598      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK.IDSOUTPUT은(는) 4개의 관측값과 3개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.04 초
 
 
22599      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
22600      var label value;
MPRINT(EM_DIAGRAM):   var label value;
22601      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22602      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_outTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "출력 테이블 속성";
MPRINT(EM_DIAGRAM):   run;
22603      run;
 
NOTE: 4개의 관측값을 데이터셋 WORK.IDSOUTPUT.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: PRINT, 페이지: 2)
NOTE: 프로시저 PRINT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22604      title10;
MPRINT(EM_DIAGRAM):   title10;
22605      proc contents noprint data=DM_LIB.BUYTEST out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
MPRINT(EM_DIAGRAM):    proc contents noprint data=DM_LIB.BUYTEST out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
22606      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK.IDSCONTENT은(는) 26개의 관측값과 28개의 변수를 가지고 있습니다.
NOTE: 프로시저 CONTENTS 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22607      data WORK.IDSCONTENT;
MPRINT(EM_DIAGRAM):   data WORK.IDSCONTENT;
22608      set WORK.IDSCONTENT end=eof;
MPRINT(EM_DIAGRAM):   set WORK.IDSCONTENT end=eof;
22609      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
22610      NVARS = _n_;
MPRINT(EM_DIAGRAM):   NVARS = _n_;
22611      output;
MPRINT(EM_DIAGRAM):   output;
22612      end;
MPRINT(EM_DIAGRAM):   end;
22613      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 26개의 관측값을 데이터셋 WORK.IDSCONTENT.에서 읽었습니다.
NOTE: 데이터셋 WORK.IDSCONTENT은(는) 1개의 관측값과 29개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
22614      data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
MPRINT(EM_DIAGRAM):   data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
22615      length ATTRIBUTE $20 LABEL $50 VALUE $80;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $80;
22616      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "속성";
22617      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "값";
22618      ;
MPRINT(EM_DIAGRAM):   ;
22619      dsid = open("WORK.IDSCONTENT");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.IDSCONTENT");
22620      rc = fetch(dsid);
MPRINT(EM_DIAGRAM):   rc = fetch(dsid);
22621      nvars = attrn(dsid, 'NVARS');
MPRINT(EM_DIAGRAM):   nvars = attrn(dsid, 'NVARS');
22622      nobs = attrn(dsid, 'NOBS');
MPRINT(EM_DIAGRAM):   nobs = attrn(dsid, 'NOBS');
22623      ATTRIBUTE = 'DATASOURCE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DATASOURCE';
22624      LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_datasource_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "데이터 소스";
22625      VALUE="buytest";
MPRINT(EM_DIAGRAM):   VALUE="buytest";
22626      output;
MPRINT(EM_DIAGRAM):   output;
22627      ATTRIBUTE = '';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = '';
22628      LABEL = '';
MPRINT(EM_DIAGRAM):   LABEL = '';
22629      VALUE='';
MPRINT(EM_DIAGRAM):   VALUE='';
22630      output;
MPRINT(EM_DIAGRAM):   output;
22631      do i=1 to nvars;
MPRINT(EM_DIAGRAM):   do i=1 to nvars;
22632      ATTRIBUTE = varname(dsid, i);
MPRINT(EM_DIAGRAM):   ATTRIBUTE = varname(dsid, i);
22633      LABEL = varlabel(dsid, i);
MPRINT(EM_DIAGRAM):   LABEL = varlabel(dsid, i);
22634      if vartype(dsid,i)='C' then do;
MPRINT(EM_DIAGRAM):   if vartype(dsid,i)='C' then do;
22635      VALUE = getvarc(dsid, i);
MPRINT(EM_DIAGRAM):   VALUE = getvarc(dsid, i);
22636      end;
MPRINT(EM_DIAGRAM):   end;
22637      else do;
MPRINT(EM_DIAGRAM):   else do;
22638      NVALUE = getvarn(dsid, i);
MPRINT(EM_DIAGRAM):   NVALUE = getvarn(dsid, i);
22639      if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
MPRINT(EM_DIAGRAM):   if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
22640      else VALUE = left(put(NVALUE, BEST12.));
MPRINT(EM_DIAGRAM):   else VALUE = left(put(NVALUE, BEST12.));
22641      end;
MPRINT(EM_DIAGRAM):   end;
22642      if ATTRIBUTE = 'NVARS' then do;
MPRINT(EM_DIAGRAM):   if ATTRIBUTE = 'NVARS' then do;
22643      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelvariables_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "변수";
22644      end;
MPRINT(EM_DIAGRAM):   end;
22645      output;
MPRINT(EM_DIAGRAM):   output;
22646      end;
MPRINT(EM_DIAGRAM):   end;
22647      dsid=close(dsid);
MPRINT(EM_DIAGRAM):   dsid=close(dsid);
22648      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK.IDSOUTPUT은(는) 31개의 관측값과 3개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.04 초
 
 
22649      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
22650      var label value;
MPRINT(EM_DIAGRAM):   var label value;
22651      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22652      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_inTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "입력 테이블 속성";
MPRINT(EM_DIAGRAM):   run;
22653      run;
 
NOTE: 31개의 관측값을 데이터셋 WORK.IDSOUTPUT.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: PRINT, 페이지: 3)
NOTE: 프로시저 PRINT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
MPRINT(EM_DIAGRAM):    proc dmdb data=DM_LIB.BUYTEST maxlevel=32 classOut=WORK._IDS_DMDBClass ;
MPRINT(EM_DIAGRAM):   class "RESPOND"n (DESC) ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._IDS_DMDBClass;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ids3: Determine decision variables for RESPOND;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.Ids3_SCORE;
MPRINT(EM_DIAGRAM):   set DM_LIB.BUYTEST;
MPRINT(EM_DIAGRAM):   keep RESPOND;
MPRINT(EM_DIAGRAM):   keep 'P_RESPOND1'n;
MPRINT(EM_DIAGRAM):   'P_RESPOND1'n = 0.5;
MPRINT(EM_DIAGRAM):   keep 'P_RESPOND0'n;
MPRINT(EM_DIAGRAM):   'P_RESPOND0'n = 0.5;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS6.Ids3_RESPOND_DM;
MPRINT(EM_DIAGRAM):   set EMWS6.Ids3_RESPOND_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_ ^in('FREQ', 'BESTPROFIT', 'COMPUTEDPROFIT', 'EXPECTEDPROFIT', 'BESTLOSS', 'COMPUTEDLOSS', 'EXPECTEDLOSS', 'ROI', 'INVESTMENTCOST', 'MODELDECISION');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify RESPOND(type=PROFIT label= RESPOND);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data EMWS6.Ids3_RESPOND_DM;
MPRINT(EM_DIAGRAM):   set EMWS6.Ids3_RESPOND_DM end=eof;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10시17분26초" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 스코어 로그";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 스코어 로그
날짜:                2018년 11월 20일
시간:                10시17분26초
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2GBF082 "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2GBF082 new;
MPRINT(EM_DIAGRAM):   run;
22798      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22799      * Ids3: Computing metadata for DATA data;
MPRINT(EM_DIAGRAM):   * Ids3: Computing metadata for DATA data;
22800      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS6.IDS3_DATA.VIEW 실행(총 프로세스 시간):
      실행 시간           0.05 초
      cpu 시간            0.06 초
 
22801      data EMWS6.Ids3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS6.Ids3_EMINFO;
22802      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
22803      TARGET="";
MPRINT(EM_DIAGRAM):   TARGET="";
22804      KEY="IDSTABLE";
MPRINT(EM_DIAGRAM):   KEY="IDSTABLE";
22805      DATA="DM_LIB.BUYTEST";
MPRINT(EM_DIAGRAM):   DATA="DM_LIB.BUYTEST";
22806      output;
MPRINT(EM_DIAGRAM):   output;
22807      TARGET="RESPOND";
MPRINT(EM_DIAGRAM):   TARGET="RESPOND";
22808      KEY="DECDATA";
MPRINT(EM_DIAGRAM):   KEY="DECDATA";
22809      DATA="EMWS6.Ids3_RESPOND_DD";
MPRINT(EM_DIAGRAM):   DATA="EMWS6.Ids3_RESPOND_DD";
22810      output;
MPRINT(EM_DIAGRAM):   output;
22811      TARGET="RESPOND";
MPRINT(EM_DIAGRAM):   TARGET="RESPOND";
22812      KEY="DECMETA";
MPRINT(EM_DIAGRAM):   KEY="DECMETA";
22813      DATA="EMWS6.Ids3_RESPOND_DM";
MPRINT(EM_DIAGRAM):   DATA="EMWS6.Ids3_RESPOND_DM";
22814      output;
MPRINT(EM_DIAGRAM):   output;
22815      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 EMWS6.IDS3_EMINFO은(는) 3개의 관측값과 3개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
NOTE: View EMWS6.IDS3_DATA.VIEW 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.04 초
 
22816      data EMWS6.Ids3_CMeta_DATA;
MPRINT(EM_DIAGRAM):    data EMWS6.Ids3_CMeta_DATA;
22817      set EMWS6.Ids3_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS6.Ids3_VariableSet;
22818      drop DROP;
MPRINT(EM_DIAGRAM):   drop DROP;
22819      where DROP='N';
MPRINT(EM_DIAGRAM):   where DROP='N';
22820      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 26개의 관측값을 데이터셋 EMWS6.IDS3_VARIABLESET.에서 읽었습니다.
      WHERE DROP='N';
NOTE: 데이터셋 EMWS6.IDS3_CMETA_DATA은(는) 26개의 관측값과 20개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10시17분27초" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 리포트 로그";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 리포트 로그
날짜:                2018년 11월 20일
시간:                10시17분27초
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1O9C5DK "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Ids3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1O9C5DK new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;

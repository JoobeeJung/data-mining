*************************************;
*** begin scoring code for regression;
*************************************;

length _WARN_ $4;
label _WARN_ = 'Warnings' ;

length I_RESPOND $ 12;
label I_RESPOND = 'Into: RESPOND' ;
*** Target Values;
array REGDRF [2] $12 _temporary_ ('1' '0' );
label U_RESPOND = 'Unnormalized Into: RESPOND' ;
format U_RESPOND BEST12.;
*** Unnormalized target values;
ARRAY REGDRU[2]  _TEMPORARY_ (1 0);

drop _DM_BAD;
_DM_BAD=0;

*** Check AGE for missing values ;
if missing( AGE ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check BUY12 for missing values ;
if missing( BUY12 ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check BUY18 for missing values ;
if missing( BUY18 ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check BUY6 for missing values ;
if missing( BUY6 ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check FICO for missing values ;
if missing( FICO ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check INCOME for missing values ;
if missing( INCOME ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Check VALUE24 for missing values ;
if missing( VALUE24 ) then do;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;

*** Generate dummy variables for CLIMATE ;
drop _1_0 _1_1 ;
if missing( CLIMATE ) then do;
   _1_0 = .;
   _1_1 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm2 $ 2; drop _dm2 ;
   _dm2 = put( CLIMATE , $CHAR2. );
   %DMNORMIP( _dm2 )
   if _dm2 = '20'  then do;
      _1_0 = 0;
      _1_1 = 1;
   end;
   else if _dm2 = '30'  then do;
      _1_0 = -1;
      _1_1 = -1;
   end;
   else if _dm2 = '10'  then do;
      _1_0 = 1;
      _1_1 = 0;
   end;
   else do;
      _1_0 = .;
      _1_1 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for COA6 ;
drop _2_0 ;
if missing( COA6 ) then do;
   _2_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( COA6 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      _2_0 = 1;
   end;
   else if _dm12 = '1'  then do;
      _2_0 = -1;
   end;
   else do;
      _2_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for DISCBUY ;
drop _3_0 ;
if missing( DISCBUY ) then do;
   _3_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( DISCBUY , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      _3_0 = 1;
   end;
   else if _dm12 = '1'  then do;
      _3_0 = -1;
   end;
   else do;
      _3_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for LOC ;
drop _4_0 _4_1 _4_2 _4_3 _4_4 _4_5 _4_6 ;
*** encoding is sparse, initialize to zero;
_4_0 = 0;
_4_1 = 0;
_4_2 = 0;
_4_3 = 0;
_4_4 = 0;
_4_5 = 0;
_4_6 = 0;
if missing( LOC ) then do;
   _4_0 = .;
   _4_1 = .;
   _4_2 = .;
   _4_3 = .;
   _4_4 = .;
   _4_5 = .;
   _4_6 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm1 $ 1; drop _dm1 ;
   _dm1 = put( LOC , $CHAR1. );
   %DMNORMIP( _dm1 )
   _dm_find = 0; drop _dm_find;
   if _dm1 <= 'D'  then do;
      if _dm1 <= 'B'  then do;
         if _dm1 = 'A'  then do;
            _4_0 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'B'  then do;
               _4_1 = 1;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm1 = 'C'  then do;
            _4_2 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'D'  then do;
               _4_3 = 1;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   else do;
      if _dm1 <= 'F'  then do;
         if _dm1 = 'E'  then do;
            _4_4 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'F'  then do;
               _4_5 = 1;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm1 = 'G'  then do;
            _4_6 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'H'  then do;
               _4_0 = -1;
               _4_1 = -1;
               _4_2 = -1;
               _4_3 = -1;
               _4_4 = -1;
               _4_5 = -1;
               _4_6 = -1;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   if not _dm_find then do;
      _4_0 = .;
      _4_1 = .;
      _4_2 = .;
      _4_3 = .;
      _4_4 = .;
      _4_5 = .;
      _4_6 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for MARRIED ;
drop _5_0 ;
if missing( MARRIED ) then do;
   _5_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( MARRIED , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '1'  then do;
      _5_0 = -1;
   end;
   else if _dm12 = '0'  then do;
      _5_0 = 1;
   end;
   else do;
      _5_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for ORGSRC ;
drop _6_0 _6_1 _6_2 _6_3 _6_4 _6_5 ;
*** encoding is sparse, initialize to zero;
_6_0 = 0;
_6_1 = 0;
_6_2 = 0;
_6_3 = 0;
_6_4 = 0;
_6_5 = 0;
if missing( ORGSRC ) then do;
   _6_0 = .;
   _6_1 = .;
   _6_2 = .;
   _6_3 = .;
   _6_4 = .;
   _6_5 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm1 $ 1; drop _dm1 ;
   _dm1 = put( ORGSRC , $CHAR1. );
   %DMNORMIP( _dm1 )
   _dm_find = 0; drop _dm_find;
   if _dm1 <= 'O'  then do;
      if _dm1 <= 'D'  then do;
         if _dm1 = 'C'  then do;
            _6_0 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'D'  then do;
               _6_1 = 1;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm1 = 'I'  then do;
            _6_2 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'O'  then do;
               _6_3 = 1;
               _dm_find = 1;
            end;
         end;
      end;
   end;
   else do;
      if _dm1 <= 'R'  then do;
         if _dm1 = 'P'  then do;
            _6_4 = 1;
            _dm_find = 1;
         end;
         else do;
            if _dm1 = 'R'  then do;
               _6_5 = 1;
               _dm_find = 1;
            end;
         end;
      end;
      else do;
         if _dm1 = 'U'  then do;
            _6_0 = -1;
            _6_1 = -1;
            _6_2 = -1;
            _6_3 = -1;
            _6_4 = -1;
            _6_5 = -1;
            _dm_find = 1;
         end;
      end;
   end;
   if not _dm_find then do;
      _6_0 = .;
      _6_1 = .;
      _6_2 = .;
      _6_3 = .;
      _6_4 = .;
      _6_5 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for OWNHOME ;
drop _7_0 ;
if missing( OWNHOME ) then do;
   _7_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( OWNHOME , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      _7_0 = 1;
   end;
   else if _dm12 = '1'  then do;
      _7_0 = -1;
   end;
   else do;
      _7_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for RETURN24 ;
drop _8_0 ;
if missing( RETURN24 ) then do;
   _8_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm12 $ 12; drop _dm12 ;
   _dm12 = put( RETURN24 , BEST12. );
   %DMNORMIP( _dm12 )
   if _dm12 = '0'  then do;
      _8_0 = 1;
   end;
   else if _dm12 = '1'  then do;
      _8_0 = -1;
   end;
   else do;
      _8_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for SEX ;
drop _9_0 ;
if missing( SEX ) then do;
   _9_0 = .;
   substr(_warn_,1,1) = 'M';
   _DM_BAD = 1;
end;
else do;
   length _dm1 $ 1; drop _dm1 ;
   _dm1 = put( SEX , $CHAR1. );
   %DMNORMIP( _dm1 )
   if _dm1 = 'M'  then do;
      _9_0 = -1;
   end;
   else if _dm1 = 'F'  then do;
      _9_0 = 1;
   end;
   else do;
      _9_0 = .;
      substr(_warn_,2,1) = 'U';
      _DM_BAD = 1;
   end;
end;

*** If missing inputs, use averages;
if _DM_BAD > 0 then do;
   _P0 = 0.0743134087;
   _P1 = 0.9256865913;
   goto REGDR1;
end;

*** Compute Linear Predictor;
drop _TEMP;
drop _LP0;
_LP0 = 0;

***  Effect: AGE ;
_TEMP = AGE ;
_LP0 = _LP0 + (   -0.02752160716194 * _TEMP);

***  Effect: BUY12 ;
_TEMP = BUY12 ;
_LP0 = _LP0 + (   -0.25771049332257 * _TEMP);

***  Effect: BUY18 ;
_TEMP = BUY18 ;
_LP0 = _LP0 + (    0.59865595317529 * _TEMP);

***  Effect: BUY6 ;
_TEMP = BUY6 ;
_LP0 = _LP0 + (   -0.20795127507922 * _TEMP);

***  Effect: CLIMATE ;
_TEMP = 1;
_LP0 = _LP0 + (     0.2488816465401) * _TEMP * _1_0;
_LP0 = _LP0 + (   -0.24764504033533) * _TEMP * _1_1;

***  Effect: COA6 ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.32638886609879) * _TEMP * _2_0;

***  Effect: DISCBUY ;
_TEMP = 1;
_LP0 = _LP0 + (     0.0381253385596) * _TEMP * _3_0;

***  Effect: FICO ;
_TEMP = FICO ;
_LP0 = _LP0 + (   -0.00673204794151 * _TEMP);

***  Effect: INCOME ;
_TEMP = INCOME ;
_LP0 = _LP0 + (    -0.0062979417833 * _TEMP);

***  Effect: LOC ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.18652032505833) * _TEMP * _4_0;
_LP0 = _LP0 + (    0.12976031480666) * _TEMP * _4_1;
_LP0 = _LP0 + (    0.14860542260053) * _TEMP * _4_2;
_LP0 = _LP0 + (    0.17026139620841) * _TEMP * _4_3;
_LP0 = _LP0 + (     0.0552096603011) * _TEMP * _4_4;
_LP0 = _LP0 + (                   0) * _TEMP * _4_5;
_LP0 = _LP0 + (                   0) * _TEMP * _4_6;

***  Effect: MARRIED ;
_TEMP = 1;
_LP0 = _LP0 + (    -0.2431995164444) * _TEMP * _5_0;

***  Effect: ORGSRC ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.08764792448148) * _TEMP * _6_0;
_LP0 = _LP0 + (   -0.12930971879112) * _TEMP * _6_1;
_LP0 = _LP0 + (   -0.36598390115444) * _TEMP * _6_2;
_LP0 = _LP0 + (    0.04778576627026) * _TEMP * _6_3;
_LP0 = _LP0 + (    0.48291776998561) * _TEMP * _6_4;
_LP0 = _LP0 + (   -0.01336443491305) * _TEMP * _6_5;

***  Effect: OWNHOME ;
_TEMP = 1;
_LP0 = _LP0 + (    0.15785389993526) * _TEMP * _7_0;

***  Effect: RETURN24 ;
_TEMP = 1;
_LP0 = _LP0 + (   -0.03294790918286) * _TEMP * _8_0;

***  Effect: SEX ;
_TEMP = 1;
_LP0 = _LP0 + (    0.01034615155437) * _TEMP * _9_0;

***  Effect: VALUE24 ;
_TEMP = VALUE24 ;
_LP0 = _LP0 + (    0.00046194298259 * _TEMP);

*** Naive Posterior Probabilities;
drop _MAXP _IY _P0 _P1;
_TEMP =     3.54285410760808 + _LP0;
if (_TEMP < 0) then do;
   _TEMP = exp(_TEMP);
   _P0 = _TEMP / (1 + _TEMP);
end;
else _P0 = 1 / (1 + exp(-_TEMP));
_P1 = 1.0 - _P0;

REGDR1:


*** Posterior Probabilities and Predicted Level;
label P_RESPOND1 = 'Predicted: RESPOND=1' ;
label P_RESPOND0 = 'Predicted: RESPOND=0' ;
P_RESPOND1 = _P0;
_MAXP = _P0;
_IY = 1;
P_RESPOND0 = _P1;
if (_P1 >  _MAXP + 1E-8) then do;
   _MAXP = _P1;
   _IY = 2;
end;
I_RESPOND = REGDRF[_IY];
U_RESPOND = REGDRU[_IY];

*************************************;
***** end scoring code for regression;
*************************************;

*------------------------------------------------------------*
사용자:                Administrator
날짜:                2018년 11월 20일
시간:                11시23분29초
사이트:                10503192
플랫폼:            X64_10HOME
관리 릴리스: 9.04.01M4P110916
EM 버전:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11시23분26초" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 분석 로그";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 분석 로그
날짜:                2018년 11월 20일
시간:                11시23분26초
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O101HDUS "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O101HDUS new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11시23분26초" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "사용자:                Administrator";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "사이트:                10503192";
MPRINT(EM_DIAGRAM):   put "플랫폼:            X64_10HOME";
MPRINT(EM_DIAGRAM):   put "관리 릴리스: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM 버전:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11시23분26초" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "사용자:                Administrator";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 분석 출력";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 스코어 출력";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 리포트 출력";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
28017      proc freq data=EMWS6.Part4_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS6.Part4_VariableSet noprint;
28018      table ROLE*LEVEL/out=WORK.Part4META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Part4META;
28019      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 13개의 관측값을 데이터셋 EMWS6.PART4_VARIABLESET.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4META은(는) 4개의 관측값과 4개의 변수를 가지고 있습니다.
NOTE: 프로시저 FREQ 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.04 초
 
 
28020      proc print data=WORK.Part4META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Part4META label noobs;
28021      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
28022      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "역할" LEVEL = "측도 레벨" COUNT = "빈도 개수";
28023      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
28024      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "변수 요약";
MPRINT(EM_DIAGRAM):   run;
28025      run;
 
NOTE: 4개의 관측값을 데이터셋 WORK.PART4META.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: PRINT, 페이지: 4)
NOTE: 프로시저 PRINT 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.03 초
 
 
28026      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Part4: 분석용 메타데이터 준비;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1Q0H0A1;
MPRINT(EM_DIAGRAM):   set WORK.M1Q0H0A1;
MPRINT(EM_DIAGRAM):   where(PARTITIONROLE ne '' or ROLE='TARGET');
MPRINT(EM_DIAGRAM):   run;
trainPct=70 validatePct=30 testPct=0
NOTE: View EMWS6.IDS5_DATA.VIEW 실행(총 프로세스 시간):
      실행 시간           0.04 초
      cpu 시간            0.04 초
 
28034      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28035      * Part4: Retrieving stratification variable(s) levels;
MPRINT(EM_DIAGRAM):   * Part4: Retrieving stratification variable(s) levels;
28036      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28037      proc freq data=EMWS6.Ids5_DATA noprint;
MPRINT(EM_DIAGRAM):   proc freq data=EMWS6.Ids5_DATA noprint;
28038      table
28039      BAD
28040      /out=WORK.Part4_FREQ(drop=percent);
MPRINT(EM_DIAGRAM):   table BAD /out=WORK.Part4_FREQ(drop=percent);
28041      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS6.IDS5_DATA.VIEW 실행(총 프로세스 시간):
      실행 시간           0.06 초
      cpu 시간            0.06 초
 
NOTE: 5960개의 관측값을 데이터셋 DM_LIB.HMEQ.에서 읽었습니다.
NOTE: 5960개의 관측값을 데이터셋 EMWS6.IDS5_DATA.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_FREQ은(는) 2개의 관측값과 2개의 변수를 가지고 있습니다.
NOTE: 프로시저 FREQ 실행(총 프로세스 시간):
      실행 시간           0.08 초
      cpu 시간            0.09 초
 
 
28042      proc sort data=WORK.Part4_FREQ;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Part4_FREQ;
28043      by descending count;
MPRINT(EM_DIAGRAM):   by descending count;
28044      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_FREQ.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_FREQ은(는) 2개의 관측값과 2개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
MPRINT(EM_DIAGRAM):   * Part4: Retrieving levels that meet minimum requirement;
28045      * Part4: Retrieving levels that meet minimum requirement;
28046      data WORK.Part4_FREQ2(keep = count);
MPRINT(EM_DIAGRAM):   data WORK.Part4_FREQ2(keep = count);
28047      set WORK.Part4_FREQ;
MPRINT(EM_DIAGRAM):   set WORK.Part4_FREQ;
28048      where (.01 * 70 * count) >= 3;
MPRINT(EM_DIAGRAM):   where (.01 * 70 * count) >= 3;
28049      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_FREQ.에서 읽었습니다.
      WHERE (0.7*count)>=3;
NOTE: 데이터셋 WORK.PART4_FREQ2은(는) 2개의 관측값과 1개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.00 초
      cpu 시간            0.01 초
 
 
28050      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28051      * Part4: Create stratified partitioning;
MPRINT(EM_DIAGRAM):   * Part4: Create stratified partitioning;
28052      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28053      data
28054      EMWS6.Part4_TRAIN(label="")
28055      EMWS6.Part4_VALIDATE(label="")
28056      ;
MPRINT(EM_DIAGRAM):   data EMWS6.Part4_TRAIN(label="") EMWS6.PART4_VALIDATE(label="") ;
28057      retain _seed_ 12345;
MPRINT(EM_DIAGRAM):   retain _seed_ 12345;
28058      drop _seed_ _genvalue_;
MPRINT(EM_DIAGRAM):   drop _seed_ _genvalue_;
28059      call ranuni(_seed_, _genvalue_);
MPRINT(EM_DIAGRAM):   call ranuni(_seed_, _genvalue_);
28060      label _dataobs_ = "%sysfunc(sasmsg(sashelp.dmine, sample_dataobs_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _dataobs_ = "관측치 수";
28061      _dataobs_ = _N_;
MPRINT(EM_DIAGRAM):   _dataobs_ = _N_;
28062      drop _c00:;
MPRINT(EM_DIAGRAM):   drop _c00:;
28063      set EMWS6.Ids5_DATA;
MPRINT(EM_DIAGRAM):   set EMWS6.Ids5_DATA;
28064      if
28065      BAD = 0
28066      then do;
MPRINT(EM_DIAGRAM):   if BAD = 0 then do;
28067      if (4771+1-_C000003)*_genvalue_ <= (3340 - _C000001) then do;
MPRINT(EM_DIAGRAM):   if (4771+1-_C000003)*_genvalue_ <= (3340 - _C000001) then do;
28068      _C000001 + 1;
MPRINT(EM_DIAGRAM):   _C000001 + 1;
28069      output EMWS6.Part4_TRAIN;
MPRINT(EM_DIAGRAM):   output EMWS6.Part4_TRAIN;
28070      end;
MPRINT(EM_DIAGRAM):   end;
28071      else do;
MPRINT(EM_DIAGRAM):   else do;
28072      _C000002 + 1;
MPRINT(EM_DIAGRAM):   _C000002 + 1;
28073      output EMWS6.Part4_VALIDATE;
MPRINT(EM_DIAGRAM):   output EMWS6.Part4_VALIDATE;
28074      end;
MPRINT(EM_DIAGRAM):   end;
28075      _C000003+1;
MPRINT(EM_DIAGRAM):   _C000003+1;
28076      end;
MPRINT(EM_DIAGRAM):   end;
28077      else if
28078      BAD = 1
28079      then do;
MPRINT(EM_DIAGRAM):   else if BAD = 1 then do;
28080      if (1189+1-_C000006)*_genvalue_ <= (832 - _C000004) then do;
MPRINT(EM_DIAGRAM):   if (1189+1-_C000006)*_genvalue_ <= (832 - _C000004) then do;
28081      _C000004 + 1;
MPRINT(EM_DIAGRAM):   _C000004 + 1;
28082      output EMWS6.Part4_TRAIN;
MPRINT(EM_DIAGRAM):   output EMWS6.Part4_TRAIN;
28083      end;
MPRINT(EM_DIAGRAM):   end;
28084      else do;
MPRINT(EM_DIAGRAM):   else do;
28085      _C000005 + 1;
MPRINT(EM_DIAGRAM):   _C000005 + 1;
28086      output EMWS6.Part4_VALIDATE;
MPRINT(EM_DIAGRAM):   output EMWS6.Part4_VALIDATE;
28087      end;
MPRINT(EM_DIAGRAM):   end;
28088      _C000006+1;
MPRINT(EM_DIAGRAM):   _C000006+1;
28089      end;
MPRINT(EM_DIAGRAM):   end;
28090      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS6.IDS5_DATA.VIEW 실행(총 프로세스 시간):
      실행 시간           0.06 초
      cpu 시간            0.07 초
 
NOTE: 5960개의 관측값을 데이터셋 DM_LIB.HMEQ.에서 읽었습니다.
NOTE: 5960개의 관측값을 데이터셋 EMWS6.IDS5_DATA.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.PART4_TRAIN은(는) 4170개의 관측값과 14개의 변수를 가지고 있습니다.
NOTE: 데이터셋 EMWS6.PART4_VALIDATE은(는) 1790개의 관측값과 14개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.10 초
      cpu 시간            0.09 초
 
 
28091      data _tempNobs;
MPRINT(EM_DIAGRAM):    data _tempNobs;
28092      length Type $8 Table $32 Nobs 8;
MPRINT(EM_DIAGRAM):   length Type $8 Table $32 Nobs 8;
28093      label type= "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,    NOQUOTE))" table = "%sysfunc(sasmsg(sashelp.dmine, meta_dataset_vlabel, NOQUOTE))" nobs = "%sysfunc(sasmsg(sashelp.dmine,  rpt_numObs_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label type= "유형" table = "데이터셋" nobs = "관측치 수";
28094      type='DATA';
MPRINT(EM_DIAGRAM):   type='DATA';
28095      table="EMWS6.Ids5_DATA";
MPRINT(EM_DIAGRAM):   table="EMWS6.Ids5_DATA";
28096      Nobs=5960;
MPRINT(EM_DIAGRAM):   Nobs=5960;
28097      output;
MPRINT(EM_DIAGRAM):   output;
28098      type='TRAIN';
MPRINT(EM_DIAGRAM):   type='TRAIN';
28099      table="EMWS6.Part4_TRAIN";
MPRINT(EM_DIAGRAM):   table="EMWS6.Part4_TRAIN";
28100      Nobs=4170;
MPRINT(EM_DIAGRAM):   Nobs=4170;
28101      output;
MPRINT(EM_DIAGRAM):   output;
28102      type='VALIDATE';
MPRINT(EM_DIAGRAM):   type='VALIDATE';
28103      table="EMWS6.Part4_VALIDATE";
MPRINT(EM_DIAGRAM):   table="EMWS6.Part4_VALIDATE";
28104      Nobs=1790;
MPRINT(EM_DIAGRAM):   Nobs=1790;
28105      output;
MPRINT(EM_DIAGRAM):   output;
28106      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK._TEMPNOBS은(는) 3개의 관측값과 3개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.03 초
 
 
28107      %let _cn = %sysfunc(getoption(CENTER));
28108      %let _nb = %sysfunc(getoption(NUMBER));
28109      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
28110      proc print data=_tempNobs noobs label;
MPRINT(EM_DIAGRAM):   proc print data=_tempNobs noobs label;
28111      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
28112      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_partitionSummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "분할 요약";
MPRINT(EM_DIAGRAM):   run;
28113      run;
 
NOTE: 3개의 관측값을 데이터셋 WORK._TEMPNOBS.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: PRINT, 페이지: 5)
NOTE: 프로시저 PRINT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28114      title10;
MPRINT(EM_DIAGRAM):   title10;
28115      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):   run;
28116      run;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11시23분27초" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 스코어 로그";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 스코어 로그
날짜:                2018년 11월 20일
시간:                11시23분27초
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0D8699M "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0D8699M new;
MPRINT(EM_DIAGRAM):   run;
28218      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28219      * Part4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Part4: Computing metadata for TRAIN data;
28220      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS6.Part4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS6.Part4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options fmterr;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
MPRINT(EMADVISECOLUMNS):   set EMWS6.Part4_TRAIN;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   stop;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS6.Part4_TRAIN out=WORK.M3WJ7Y7P noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WJ7Y7P;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WJ7Y7P(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WJ7Y7P;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WJ7Y7P;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2HFIK2I NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2HFIK2I;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HFIK2I;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3K55Z7X(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HFIK2I;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2HFIK2I;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HFIK2I;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2HFIK2I;
MPRINT(EMADVISECOLUMNS):   set WORK.M2HFIK2I;
MPRINT(EMADVISECOLUMNS):   label NAME = "변수 이름" TYPE = "유형" ROLE = "역할" LEVEL= "측도 레벨" ORDER= "순서" CREATOR= "생성자" FORMATTYPE= "출력형식 유형" FAMILY= "군" DISTRIBUTION= "분포" PRICE= "가격" LOWERLIMIT= "하한" UPPERLIMIT= "상한" REPORT=
"리 포트" COMMENT= "주석" INDEX= "인덱스" INDEXTYPE= "인덱스 유형" LABEL= "레이블" LENGTH= "길이";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS6.Ids5_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS6.Ids5_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS6.Part4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Part4";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Part4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = '_DATAOBS_' then ROLE='ID';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "2018년 11월 20일" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11시23분28초" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* 리포트 로그";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* 리포트 로그
날짜:                2018년 11월 20일
시간:                11시23분28초
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1YU84QR "C:\Users\Administrator\DM_Proj\DataMining2018\Workspaces\EMWS6\Part4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1YU84QR new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M1K94VLM;
MPRINT(EM_DIAGRAM):   set WORK.M1K94VLM;
MPRINT(EM_DIAGRAM):   where(ROLE = "TARGET" or ROLE = "FREQ");
MPRINT(EM_DIAGRAM):   run;
28594      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28595      * Part4: Class 타겟 변수에 대한 통계량 계산;
MPRINT(EM_DIAGRAM):   * Part4: Class 타겟 변수에 대한 통계량 계산;
28596      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28597      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
28598      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
28599      proc freq data = EMWS6.Ids5_DATA order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS6.Ids5_DATA order=formatted addnames;
28600      table BAD / missing;
MPRINT(EM_DIAGRAM):   table BAD / missing;
28601      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS6.IDS5_DATA.VIEW 실행(총 프로세스 시간):
      실행 시간           0.06 초
      cpu 시간            0.07 초
 
NOTE: 5960개의 관측값을 데이터셋 DM_LIB.HMEQ.에서 읽었습니다.
NOTE: 데이터셋 WORK.TEMPFREQ은(는) 2개의 관측값과 8개의 변수를 가지고 있습니다.
NOTE: 5960개의 관측값을 데이터셋 EMWS6.IDS5_DATA.에서 읽었습니다.
NOTE: 프로시저 FREQ 실행(총 프로세스 시간):
      실행 시간           0.08 초
      cpu 시간            0.09 초
 
 
MPRINT(EM_DIAGRAM):   quit;
28602      quit;
28603      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
28604      data WORK.Part4_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part4_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
28605      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
28606         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "변수" Type = "유형" _X_ = "숫자값" _XLABEL_ = "출력형식 값" COUNT = "빈도 개수" PERCENT = "백분율";
28607      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
28608      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
28609      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
28610      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
28611      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
28612      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
28613      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
28614      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
28615      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
28616      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
28617      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
28618      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
28619      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
28620      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
28621      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
28622      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
28623      output;
MPRINT(EM_DIAGRAM):   output;
28624      end;
MPRINT(EM_DIAGRAM):   end;
28625      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
28626      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 6개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.05 초
      cpu 시간            0.04 초
 
 
28627      proc sort data=WORK.Part4_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part4_BAR NOTHREADS;
28628      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
28629      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 6개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28630      proc sort data=WORK.M1K94VLM;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1K94VLM;
28631      by Name;
MPRINT(EM_DIAGRAM):   by Name;
28632      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 1개의 관측값을 데이터셋 WORK.M1K94VLM.에서 읽었습니다.
NOTE: 데이터셋 WORK.M1K94VLM은(는) 1개의 관측값과 21개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28633      data WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part4_BAR;
28634      merge WORK.Part4_BAR(in=_a) WORK.M1K94VLM(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part4_BAR(in=_a) WORK.M1K94VLM(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
28635      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
28636      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "역할";
28637      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "레이블";
28638      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
28639      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 변수 Label이(가) 초기화되지 않았습니다.
WARNING: 입력 데이터셋으로 BY 변수 _VARIABLE_에 대해 여러 길이가 지정되었습니다. 예상하지 못한 결과를 발생시킬 수 있습니다.
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 1개의 관측값을 데이터셋 WORK.M1K94VLM.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 8개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.03 초
 
 
28640      data EMWS6.Part4_CLASS;
MPRINT(EM_DIAGRAM):    data EMWS6.Part4_CLASS;
28641      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
28642      set WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part4_BAR;
28643      DATA = "DATA";
MPRINT(EM_DIAGRAM):   DATA = "DATA";
28644      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.PART4_CLASS은(는) 2개의 관측값과 9개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28645      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28646      * Part4: Interval 타겟 변수에 대한 통계량 계산;
MPRINT(EM_DIAGRAM):   * Part4: Interval 타겟 변수에 대한 통계량 계산;
28647      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28648      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28649      * Part4: Class 타겟 변수에 대한 통계량 계산;
MPRINT(EM_DIAGRAM):   * Part4: Class 타겟 변수에 대한 통계량 계산;
28650      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28651      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
28652      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
28653      proc freq data = EMWS6.Part4_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS6.Part4_TRAIN order=formatted addnames;
28654      table BAD / missing;
MPRINT(EM_DIAGRAM):   table BAD / missing;
28655      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK.TEMPFREQ은(는) 2개의 관측값과 8개의 변수를 가지고 있습니다.
NOTE: 4170개의 관측값을 데이터셋 EMWS6.PART4_TRAIN.에서 읽었습니다.
NOTE: 프로시저 FREQ 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.03 초
 
 
MPRINT(EM_DIAGRAM):   quit;
28656      quit;
28657      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
28658      data WORK.Part4_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part4_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
28659      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
28660         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "변수" Type = "유형" _X_ = "숫자값" _XLABEL_ = "출력형식 값" COUNT = "빈도 개수" PERCENT = "백분율";
28661      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
28662      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
28663      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
28664      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
28665      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
28666      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
28667      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
28668      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
28669      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
28670      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
28671      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
28672      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
28673      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
28674      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
28675      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
28676      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
28677      output;
MPRINT(EM_DIAGRAM):   output;
28678      end;
MPRINT(EM_DIAGRAM):   end;
28679      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
28680      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 6개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.05 초
      cpu 시간            0.04 초
 
 
28681      proc sort data=WORK.Part4_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part4_BAR NOTHREADS;
28682      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
28683      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 6개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.00 초
 
 
28684      proc sort data=WORK.M1K94VLM;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1K94VLM;
28685      by Name;
MPRINT(EM_DIAGRAM):   by Name;
28686      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 입력 데이터셋이 이미 정렬되어 있어서, 정렬을 실행하지 않았습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.00 초
      cpu 시간            0.00 초
 
 
28687      data WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part4_BAR;
28688      merge WORK.Part4_BAR(in=_a) WORK.M1K94VLM(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part4_BAR(in=_a) WORK.M1K94VLM(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
28689      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
28690      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "역할";
28691      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "레이블";
28692      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
28693      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 변수 Label이(가) 초기화되지 않았습니다.
WARNING: 입력 데이터셋으로 BY 변수 _VARIABLE_에 대해 여러 길이가 지정되었습니다. 예상하지 못한 결과를 발생시킬 수 있습니다.
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 1개의 관측값을 데이터셋 WORK.M1K94VLM.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 8개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.01 초
 
 
28694      data WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Part4_BAR;
28695      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
28696      set WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part4_BAR;
28697      DATA = "TRAIN";
MPRINT(EM_DIAGRAM):   DATA = "TRAIN";
28698      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 9개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28699      data EMWS6.Part4_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS6.Part4_CLASS;
28700      set EMWS6.Part4_CLASS WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):   set EMWS6.Part4_CLASS WORK.Part4_BAR;
28701      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 EMWS6.PART4_CLASS.에서 읽었습니다.
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.PART4_CLASS은(는) 4개의 관측값과 9개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28702      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28703      * Part4: Interval 타겟 변수에 대한 통계량 계산;
MPRINT(EM_DIAGRAM):   * Part4: Interval 타겟 변수에 대한 통계량 계산;
28704      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28705      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28706      * Part4: Class 타겟 변수에 대한 통계량 계산;
MPRINT(EM_DIAGRAM):   * Part4: Class 타겟 변수에 대한 통계량 계산;
28707      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28708      ods listing close;
MPRINT(EM_DIAGRAM):   ods listing close;
28709      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
28710      proc freq data = EMWS6.Part4_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS6.Part4_VALIDATE order=formatted addnames;
28711      table BAD / missing;
MPRINT(EM_DIAGRAM):   table BAD / missing;
28712      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK.TEMPFREQ은(는) 2개의 관측값과 8개의 변수를 가지고 있습니다.
NOTE: 1790개의 관측값을 데이터셋 EMWS6.PART4_VALIDATE.에서 읽었습니다.
NOTE: 프로시저 FREQ 실행(총 프로세스 시간):
      실행 시간           0.03 초
      cpu 시간            0.03 초
 
 
MPRINT(EM_DIAGRAM):   quit;
28713      quit;
28714      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
28715      data WORK.Part4_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Part4_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
28716      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
28717         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "변수" Type = "유형" _X_ = "숫자값" _XLABEL_ = "출력형식 값" COUNT = "빈도 개수" PERCENT = "백분율";
28718      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
28719      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
28720      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
28721      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
28722      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
28723      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
28724      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
28725      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
28726      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
28727      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
28728      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
28729      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
28730      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
28731      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
28732      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
28733      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
28734      output;
MPRINT(EM_DIAGRAM):   output;
28735      end;
MPRINT(EM_DIAGRAM):   end;
28736      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
28737      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 6개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.05 초
      cpu 시간            0.04 초
 
 
28738      proc sort data=WORK.Part4_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Part4_BAR NOTHREADS;
28739      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
28740      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 6개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28741      proc sort data=WORK.M1K94VLM;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1K94VLM;
28742      by Name;
MPRINT(EM_DIAGRAM):   by Name;
28743      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 입력 데이터셋이 이미 정렬되어 있어서, 정렬을 실행하지 않았습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.00 초
      cpu 시간            0.00 초
 
 
28744      data WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Part4_BAR;
28745      merge WORK.Part4_BAR(in=_a) WORK.M1K94VLM(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
MPRINT(EM_DIAGRAM):   merge WORK.Part4_BAR(in=_a) WORK.M1K94VLM(keep=Name Label Role rename=(Name=_Variable_ Label=_Label_));
28746      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
28747      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "역할";
28748      label Label = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Label = "레이블";
28749      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
28750      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 변수 Label이(가) 초기화되지 않았습니다.
WARNING: 입력 데이터셋으로 BY 변수 _VARIABLE_에 대해 여러 길이가 지정되었습니다. 예상하지 못한 결과를 발생시킬 수 있습니다.
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 1개의 관측값을 데이터셋 WORK.M1K94VLM.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 8개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.03 초
 
 
28751      data WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Part4_BAR;
28752      length DATA $8;
MPRINT(EM_DIAGRAM):   length DATA $8;
28753      set WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Part4_BAR;
28754      DATA = "VALIDATE";
MPRINT(EM_DIAGRAM):   DATA = "VALIDATE";
28755      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 데이터셋 WORK.PART4_BAR은(는) 2개의 관측값과 9개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28756      data EMWS6.Part4_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS6.Part4_CLASS;
28757      set EMWS6.Part4_CLASS WORK.Part4_BAR;
MPRINT(EM_DIAGRAM):   set EMWS6.Part4_CLASS WORK.Part4_BAR;
28758      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 4개의 관측값을 데이터셋 EMWS6.PART4_CLASS.에서 읽었습니다.
NOTE: 2개의 관측값을 데이터셋 WORK.PART4_BAR.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.PART4_CLASS은(는) 6개의 관측값과 9개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28759      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28760      * Part4: Interval 타겟 변수에 대한 통계량 계산;
MPRINT(EM_DIAGRAM):   * Part4: Interval 타겟 변수에 대한 통계량 계산;
28761      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28762      data EMWS6.Part4_CLASS(rename=(_VARIABLE_=VARIABLE _X_=VALUE _XLABEL_=FORMATTEDVALUE));
MPRINT(EM_DIAGRAM):   data EMWS6.Part4_CLASS(rename=(_VARIABLE_=VARIABLE _X_=VALUE _XLABEL_=FORMATTEDVALUE));
28763      label DATA = "%sysfunc(sasmsg(sashelp.dmine, rpt_data_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATA = "데이터";
28764      set EMWS6.Part4_CLASS;
MPRINT(EM_DIAGRAM):   set EMWS6.Part4_CLASS;
28765      drop type role;
MPRINT(EM_DIAGRAM):   drop type role;
28766      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 6개의 관측값을 데이터셋 EMWS6.PART4_CLASS.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.PART4_CLASS은(는) 6개의 관측값과 7개의 변수를 가지고 있습니다.
NOTE: DATA 문장 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28767      proc sort data=EMWS6.Part4_CLASS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS6.Part4_CLASS NOTHREADS;
28768      by DATA;
MPRINT(EM_DIAGRAM):   by DATA;
28769      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 6개의 관측값을 데이터셋 EMWS6.PART4_CLASS.에서 읽었습니다.
NOTE: 데이터셋 EMWS6.PART4_CLASS은(는) 6개의 관측값과 7개의 변수를 가지고 있습니다.
NOTE: 프로시저 SORT 실행(총 프로세스 시간):
      실행 시간           0.01 초
      cpu 시간            0.01 초
 
 
28770      %let _cn = %sysfunc(getoption(CENTER));
28771      %let _nb = %sysfunc(getoption(NUMBER));
28772      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
28773      proc print data=EMWS6.Part4_CLASS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS6.Part4_CLASS noobs label;
28774      by DATA;
MPRINT(EM_DIAGRAM):   by DATA;
28775      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
28776      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classTargetStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "클래스 타겟에 대한 요약 통계량";
MPRINT(EM_DIAGRAM):   run;
28777      run;
 
NOTE: 6개의 관측값을 데이터셋 EMWS6.PART4_CLASS.에서 읽었습니다.
NOTE: 출력 결과 (프로시저: PRINT, 페이지: 6)
NOTE: 프로시저 PRINT 실행(총 프로세스 시간):
      실행 시간           0.02 초
      cpu 시간            0.03 초
 
 
28778      title10;
MPRINT(EM_DIAGRAM):   title10;
28779      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
